name: Firebase Functions CI/CD - Master

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'What environment do you want to deploy to?'
        type: environment
        required: true
      release:
        description: 'The release version to deploy (ex: 1.0.0)'
        type: string
        required: true

jobs:
  deploy-sentry:
    if: github.ref == 'refs/heads/main'
    environment: ${{ inputs.environment }}
    name: Sentry Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Split Repo Name
        uses: jungwinter/split@v2.1.0
        id: split_repo_name
        with:
          msg: ${{ github.repository }}
          separator: /
          maxsplit: 1
          - name: Sentry Release Web
          uses: getsentry/action-release@v1.4.1
          env:
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG: ${{ vars.SENTRY_ORG }}
            SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
          with:
            environment: development
            version: ${{ steps.split_repo_name.outputs._1 }}@${{ inputs.release }}
        - name: Sentry Release Firebase
          uses: getsentry/action-release@v1.4.1
          env:
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG: ${{ vars.SENTRY_ORG }}
            SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT_FIREBASE }}
          with:
            environment: development
            version: ${{ steps.split_repo_name.outputs._1 }}@${{ inputs.release }}
  deploy-firebase:
    if: github.ref == 'refs/heads/main'
    needs: deploy-sentry
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy firebase to ${{ inputs.environment }}
        id: deploy
        uses: ./.github/workflows/actions/deploy-firebase
        with:
          firebase_project_id: ${{ vars.FIREBASE_PROJECT_ID }}
          firebase_functions_env_file: ${{ secrets.FIREBASE_FUNCTIONS_ENV_FILE }}
          gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
